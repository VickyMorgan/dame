// Third party Plugins
plugins {
    id "org.sonarqube" version "2.6.2"
}

// Projektinformationen via gradle.properties
projectName = projectName
group = projectGroup
version = projectVersion
description = "Dame"

// Wir programmieren Java
apply plugin: "java"

// In Version 8 (1.8)
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Konfiguration von Repositories die uns die Dependencies/Libraries von Dritten zur Verfügung stellen
repositories {
    jcenter()
}

// Dependencies/Libraries
dependencies {
    // Apache Commons
    compile group: "org.apache.commons", name: "commons-lang3", version: "3.7"
    compile group: "org.apache.commons", name: "commons-configuration2", version: "2.2"
    compile group: "commons-beanutils", name: "commons-beanutils", version: "1.9.3"

    // Guava
    compile group: "com.google.guava", name: "guava", version: "23.5-jre"

    // Log4J
    compile group: "org.apache.logging.log4j", name: "log4j-api", version: "2.11.0"
    compile group: "org.apache.logging.log4j", name: "log4j-core", version: "2.11.0"

    // Abhängigkeiten bei Test-Code
    testImplementation "junit:junit:4.12"

    // Hamcrest Matcher für bessere Asserts
    testImplementation group: "org.hamcrest", name: "hamcrest-all", version: "1.3"
}

// Build-Artifakt: Ausführbare JAR-Datei
jar {
    // PSD vom JAR ausschliessen
    exclude ("psd/**")


    // Alle Dependencies ins JAR
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // MANIFEST-File im JAR, dass Informationen zum Projekt und Version beinhaltet
    manifest {
        attributes("Implementation-Title": project.name,
                   "Implementation-Version": project.version,
                   "Main-Class": "ch.ffhs.ftoop.bridge.dame.Main")
    }
}
// Erlaubt das Erstellen von Eclipse Projekte von Gradle aus, damit es einfacher in die IDE importiert werden kann
apply plugin: "eclipse"

// Erlaubt das Messen der "Code Coverage"
apply plugin: "jacoco"

// Konfiguration für Javadoc
javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

// Konfiguration für SonarQube
sonarqube {
    properties {
        property "sonar.projectKey", projectName
        property "sonar.projectVersion", projectVersion
        property "sonar.projectName", projectName
        property "sonar.host.url", "http://localhost:9000"
    }
}